<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZJ的后花园</title>
  
  <subtitle>技术博客/狗头</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-09T15:40:14.625Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhujie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&lt;面向对象&gt;操作符重载</title>
    <link href="http://yoursite.com/2020/08/09/lessmian-xiang-dui-xiang-greatercao-zuo-fu-chong-zai/"/>
    <id>http://yoursite.com/2020/08/09/lessmian-xiang-dui-xiang-greatercao-zuo-fu-chong-zai/</id>
    <published>2020-08-09T13:59:36.000Z</published>
    <updated>2020-08-09T15:40:14.625Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本来想把前面三章都整理一遍的，但是工作量太大了，所以我决定边学边写，以后和操作符重载有关的内容就都写在这里了&lt;br&gt;
    
    </summary>
    
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;阶和原根</title>
    <link href="http://yoursite.com/2020/08/07/lessshu-lun-greaterjie-he-yuan-gen/"/>
    <id>http://yoursite.com/2020/08/07/lessshu-lun-greaterjie-he-yuan-gen/</id>
    <published>2020-08-07T11:20:36.000Z</published>
    <updated>2020-08-09T15:46:33.268Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;先写一下之前没写的欧拉定理，然后讲讲阶和原根，说实话这一章我学的真的挺懵的，后面会涉及原根的存在性问题和素性判断&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;莫比乌斯反演</title>
    <link href="http://yoursite.com/2020/08/05/lessshu-lun-greatermo-bi-wu-si-fan-yan/"/>
    <id>http://yoursite.com/2020/08/05/lessshu-lun-greatermo-bi-wu-si-fan-yan/</id>
    <published>2020-08-05T11:38:28.000Z</published>
    <updated>2020-08-09T15:46:36.785Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在之前学积性函数的时候会看到诸如$F(n)=\sum_{d|n}{f(d)}$的式子，其中 $f$ 是积性函数，这个式子是知道 $f(n)$ 推导其和函数，那么我们能不能知道和函数 $F(n)$ 反推 $f$ 呢？利用莫比乌斯反演可以实现这一过程&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;完全数和梅森素数</title>
    <link href="http://yoursite.com/2020/08/04/lessshu-lun-greaterwan-quan-shu-he-mei-sen-su-shu/"/>
    <id>http://yoursite.com/2020/08/04/lessshu-lun-greaterwan-quan-shu-he-mei-sen-su-shu/</id>
    <published>2020-08-04T07:45:03.000Z</published>
    <updated>2020-08-09T15:46:48.551Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由之前学的积性函数，开始学习另外的两个积性函数，然后讲讲梅森素数，是一个非常有趣的方向&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;积性函数</title>
    <link href="http://yoursite.com/2020/08/03/lessshu-lun-greatercheng-xing-han-shu/"/>
    <id>http://yoursite.com/2020/08/03/lessshu-lun-greatercheng-xing-han-shu/</id>
    <published>2020-08-03T09:06:04.000Z</published>
    <updated>2020-08-09T15:46:16.058Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这一章开始学习数论函数，从欧拉函数到因子、因子数函数，我觉得这一章还是比较好理解的&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>随笔2020.7</title>
    <link href="http://yoursite.com/2020/08/02/sui-bi-20207/"/>
    <id>http://yoursite.com/2020/08/02/sui-bi-20207/</id>
    <published>2020-08-02T14:47:36.000Z</published>
    <updated>2020-08-09T15:47:33.403Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;不出意外的话以后每个月都写篇随笔吧，总结一下这个月干了什么，以及接下来想干什么。本来也没打算写随笔，但是最近确实太累了，学的也有点乱，写篇随笔理理思路，顺便消磨一下时间。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;线性同余方程和中国剩余定理</title>
    <link href="http://yoursite.com/2020/07/31/lessshu-lie-greaterxian-xing-tong-yu-fang-cheng/"/>
    <id>http://yoursite.com/2020/07/31/lessshu-lie-greaterxian-xing-tong-yu-fang-cheng/</id>
    <published>2020-07-31T11:40:54.000Z</published>
    <updated>2020-08-09T15:46:11.212Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;线性同余方程&quot;&gt;&lt;a href=&quot;#线性同余方程&quot; class=&quot;headerlink&quot; title=&quot;线性同余方程&quot;&gt;&lt;/a&gt;线性同余方程&lt;/h1&gt;&lt;p&gt;对于形如 $ax\equiv b\pmod m$的同余式称为一元线性同余方程&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;算法&gt;快速排序和高精度运算</title>
    <link href="http://yoursite.com/2020/07/31/lesssuan-fa-greaterkuai-su-pai-xu-he-gao-jing-du-yun-suan/"/>
    <id>http://yoursite.com/2020/07/31/lesssuan-fa-greaterkuai-su-pai-xu-he-gao-jing-du-yun-suan/</id>
    <published>2020-07-31T08:39:02.000Z</published>
    <updated>2020-08-09T15:47:43.164Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近新学的两个算法，快速排序和高精度运算，快速排序的整体思想还是非常高级的，然后写写高精度运算来深入地理解一下乘除法&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1011 车站</title>
    <link href="http://yoursite.com/2020/07/30/luo-gu-p1011-che-zhan/"/>
    <id>http://yoursite.com/2020/07/30/luo-gu-p1011-che-zhan/</id>
    <published>2020-07-30T11:55:10.000Z</published>
    <updated>2020-08-09T15:47:14.659Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;火车从始发站（称为第$1$站）开出，在始发站上车的人数为$a$，然后到达第$2$站，在第$2$站有人上、下车，但上、下车的人数相同，因此在第$2$站开出时（即在到达第3站之前）车上的人数保持为$a$人。从第$3$站起（包括第$3$站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，而下车人数等于上一站上车人数，一直到终点站的前一站（第$(n-1)$站），都满足此规律。现给出的条件是：共有$n$个车站，始发站上车的人数为$b$，最后一站下车的人数是$m$（全部下车）。试问$x$站开出时车上的人数是多少？&lt;br&gt;
    
    </summary>
    
    
      <category term="算法题" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>NOIP模拟  遭遇战</title>
    <link href="http://yoursite.com/2020/07/29/noip-mo-ni-zao-yu-zhan/"/>
    <id>http://yoursite.com/2020/07/29/noip-mo-ni-zao-yu-zhan/</id>
    <published>2020-07-29T10:00:03.000Z</published>
    <updated>2020-08-09T15:47:26.648Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;小林和小华在一个$n\times n$的矩形方格里玩游戏，矩形左上角为$(0,0)$，右下角为$(n-1,n-1)$。两人同时进入地图的随机位置，并以相同速度进行走位。为了隐蔽性，两人都不会再走自己走过的格子。如果两人向某一方向前进，那么他们会跑到不能跑为止，当不能跑的时候，小林会向右转，小华会向左转，如果不能跑，则不再动。现在已知两人进去地图的初始位置和方向，请算出两人遭遇的位置。&lt;br&gt;
    
    </summary>
    
    
      <category term="算法题" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;同余和模指数运算</title>
    <link href="http://yoursite.com/2020/07/27/lessshu-lun-greatertong-yu-he-mo-zhi-shu-yun-suan/"/>
    <id>http://yoursite.com/2020/07/27/lessshu-lun-greatertong-yu-he-mo-zhi-shu-yun-suan/</id>
    <published>2020-07-27T10:33:15.000Z</published>
    <updated>2020-08-09T15:46:44.867Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开始学到数论中一个相当重要的理论了，整个同余理论在数论中的出现还是非常多的。讲讲什么是同余和同余的一些性质&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P2077 红绿灯</title>
    <link href="http://yoursite.com/2020/07/26/luo-gu-p2077-hong-lu-deng/"/>
    <id>http://yoursite.com/2020/07/26/luo-gu-p2077-hong-lu-deng/</id>
    <published>2020-07-26T13:50:59.000Z</published>
    <updated>2020-08-09T15:47:22.731Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;在一个城市，有一条笔直的公路，在这条公路上有$N$个十字路口，每个路口都设有一个红绿灯，已知相邻的两个路口距离为$A_i$千米$(1\leq i&lt;N)$，每个路口的红灯时间为$R\_i$，绿灯时间为$G\_i$，没有黄灯，现在有一辆车从距离1号十字路口$M$千米的位置出发，且此时所有路口的红绿灯刚好从红灯跳到绿灯，问这辆车通过每个路口的时间(不能闯红灯，这辆车的速度为1千米每分钟)。
    
    </summary>
    
    
      <category term="算法题" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;丢番图方程</title>
    <link href="http://yoursite.com/2020/07/25/lessshu-lun-greaterdiu-fan-tu-fang-cheng/"/>
    <id>http://yoursite.com/2020/07/25/lessshu-lun-greaterdiu-fan-tu-fang-cheng/</id>
    <published>2020-07-25T09:25:14.000Z</published>
    <updated>2020-08-09T15:46:20.048Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是丢番图方程&quot;&gt;&lt;a href=&quot;#什么是丢番图方程&quot; class=&quot;headerlink&quot; title=&quot;什么是丢番图方程&quot;&gt;&lt;/a&gt;什么是丢番图方程&lt;/h1&gt;&lt;p&gt;丢番图方程主要是解决形如$ax+by=c$（a,b,c均为整数）的整数解的问题，比如$2x+3y=7$有没有整数解，有多少个整数解，这是丢番图方程解决的问题&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;C++面向对象&gt;类1</title>
    <link href="http://yoursite.com/2020/07/24/lesscmian-xiang-dui-xiang-greaterlei-1/"/>
    <id>http://yoursite.com/2020/07/24/lesscmian-xiang-dui-xiang-greaterlei-1/</id>
    <published>2020-07-24T14:09:15.000Z</published>
    <updated>2020-08-09T15:46:00.841Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;基本把类、继承、多态过了一遍，现在重新从类开始做一遍整理&lt;br&gt;这章整理一下类的声明，公有和私有，命名空间定义函数以及几个要点&lt;br&gt;
    
    </summary>
    
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;算术基本定理和费马因子分解</title>
    <link href="http://yoursite.com/2020/07/24/lessshu-lun-greatersuan-zhu-ji-ben-ding-li-he-fei-ma-yin-zi-fen-jie/"/>
    <id>http://yoursite.com/2020/07/24/lessshu-lun-greatersuan-zhu-ji-ben-ding-li-he-fei-ma-yin-zi-fen-jie/</id>
    <published>2020-07-24T10:43:27.000Z</published>
    <updated>2020-08-09T15:46:40.844Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;数论中相当重要的一个定理：算术基本定理。然后讲一个因子分解的技巧：费马因子分解&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;数论&gt;Eratosthenes（埃拉托色尼）筛法</title>
    <link href="http://yoursite.com/2020/07/23/lessshu-lun-greatereratosthenesai-la-tuo-se-ni-shai-fa/"/>
    <id>http://yoursite.com/2020/07/23/lessshu-lun-greatereratosthenesai-la-tuo-se-ni-shai-fa/</id>
    <published>2020-07-23T14:06:44.000Z</published>
    <updated>2020-08-09T15:46:28.630Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;埃拉托色尼筛法是一种素数筛选法，能够快速地筛选N以内的的素数，在C++中，相比较用常规的创建判断素数的函数然后对每个素数进行素数判断，埃拉托色尼筛法更为高效。&lt;br&gt;
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/categories/%E6%95%B0%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>洛谷 P1548 棋盘问题</title>
    <link href="http://yoursite.com/2020/07/23/luo-gu-p1548-qi-pan-wen-ti/"/>
    <id>http://yoursite.com/2020/07/23/luo-gu-p1548-qi-pan-wen-ti/</id>
    <published>2020-07-23T10:47:01.000Z</published>
    <updated>2020-08-09T15:47:19.080Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;设有一个$N\times M$方格的棋盘$(1\leq N\leq 100, 1\leq M\leq 100)$&lt;br&gt;求出该棋盘中包含多少个正方形、多少个长方形（不包括正方形）&lt;br&gt;输入N，M，输出正方形的个数和长方形的个数&lt;br&gt;
    
    </summary>
    
    
      <category term="算法题" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
  </entry>
  
</feed>
